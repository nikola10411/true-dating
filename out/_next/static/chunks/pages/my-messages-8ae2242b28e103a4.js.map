{"version":3,"file":"static/chunks/pages/my-messages-8ae2242b28e103a4.js","mappings":"sFACA,CAAAA,OAAAC,SAAAD,OAAAC,UAAA,IAAAC,KAAA,CACA,eACA,WACA,OAAeC,EAAQ,MACvB,EACA,2NCJAC,EAAe,GAAAC,SAAAC,CAAAA,EAA4B,GAAAC,EAAAC,GAAA,EAAI,QAC/CC,EAAA,qHACA,GAAC,yCC8IDC,EApImB,KACf,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAAEC,KAAAA,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IACX,CAACC,EAAOC,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,EAAE,EAC/B,CAACC,EAASC,EAAW,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,EAAE,EACnC,CAACG,EAASC,EAAW,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACjC,CAACK,EAAgBC,EAAkB,CAAGN,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,EAAE,QA0DvD,CAxDAO,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACN,IAAMC,EAAc,UAChB,IAAMC,EAAc,MAAMC,CAAAA,EAAAA,EAAAA,CAAAA,EAAed,EAAKe,OAC9CP,EAAW,IACNK,EAAYG,QACjBV,EAAWO,EACf,EAEIb,IACAQ,EAAW,IACXI,IAER,EAAG,CAACZ,EAAMA,EAAKe,MAAM,EAErBJ,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACN,GAAIN,EAAQW,OAAS,EAAG,CACpB,IAAIC,EAAe,EAAE,CACrB,IAAK,IAAMC,KAASb,EAAS,CACzB,IAAMc,EAAYD,EAAMhB,MAAMkB,OAAOC,GAAaA,IAAcrB,EAAKe,OACrEE,EAAeA,EAAaK,OAAOH,EACvC,CACA,IAAMI,EAAqBN,EAAaG,OAAO,CAACI,EAAaC,EAAOC,IAASA,EAAKC,QAAQH,KAAiBC,EACvGF,CAAAA,EAAmBP,OAAS,GAC5BY,CAAAA,EAAAA,EAAAA,EAAAA,EAAgBL,GAAoBM,KAAK,IACrC1B,EAAS2B,EAAKC,IAAIC,GACP,EACHC,GAAID,EAAIC,GACR,GAAGD,EAAIE,MAAM,CACjB,GAER,EAER,CACJ,EAAG,CAAC7B,EAASL,EAAKe,MAAM,EAExBJ,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACN,eAAewB,IACX,IAAMC,EAAc,EAAE,CACtB,IAAK,IAAMC,KAAcnC,EAAO,CAC5B,IAAMoC,EAAIC,CAAAA,EAAAA,EAAAA,EAAAA,EAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAWC,EAAAA,GAAW,YAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAAM,OAAQ,KAAM,CAAE,GAAsB1C,OAApBqC,EAAWtB,MAAM,KAAcO,OAAXtB,EAAKe,OAAU,GAAgBsB,OAAdrC,EAAKe,MAAM,KAAoBO,OAAjBe,EAAWtB,OAAQ,GAC3I4B,EAAgB,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQN,GACpCO,QAAQC,IAAIT,EAAWtB,OACK,KAAxB4B,EAAcI,OACdX,EAAY/C,KAAKgD,EAEzB,CACA3B,EAAkB0B,GAClB5B,EAAW,GACf,CAEIN,EAAMc,OAAS,IACfR,EAAW,IACX2B,IAER,EAAG,CAACjC,EAAOF,EAAKe,MAAM,EAElBR,GACO,GAAAb,EAAAC,GAAA,EAACqD,EAAAA,EAAWA,CAAAA,IAGvBH,QAAQC,IAAIrC,GAGR,GAAAf,EAAAC,GAAA,EAACsD,EAAAA,EAASA,UACN,GAAAvD,EAAAwD,IAAA,EAACC,EAAAA,EAAGA,CAACC,GAAI,YAEL3C,GAAkBA,EAAeO,OAAS,GAAKP,EAAesB,IAAIsB,GAC9D,GAAA3D,EAAAwD,IAAA,EAACC,EAAAA,EAAGA,CAACG,GAAI,EAAGC,QAAQ,OAAOC,WAAW,SAA+BC,GAAI,GAAY,EACjFC,gBAAiBC,EAAAA,GAAOC,UACxBC,OAAQ,aAAmCvC,OAAtBwC,EAAMC,QAAQC,SACnCC,aAAcH,EAAMI,MAAMD,aAC1BE,aAAcL,EAAMM,QAAQ,GAC5BC,QAASP,EAAMM,QAAQ,EAC3B,aACI,GAAA1E,EAAAC,GAAA,EAACwD,EAAAA,EAAGA,CACJM,GAAI,GAAY,EACZa,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRP,aAAc,GACdQ,UAAWX,EAAMY,OAAO,CAAC,EAAE,CAC3BC,YAAab,EAAMM,QAAQ,GAC3BQ,eAAgB,QAChBC,mBAAoB,SACpBC,iBAAkB,WACtB,GACAC,MAAO,CACHC,gBAAiB,OAKhB1D,OAJD+B,EAAa4B,UACZ5B,CAAAA,MAAAA,EAAa6B,OACR,oFACA,8HACL,IACL,IAEA,GAAAxF,EAAAC,GAAA,EAACwF,EAAAA,EAAUA,CAACC,QAAQ,KAAK3B,GAAI,GAAY,EACjCc,MAAO,OACPc,SAAU,IACVC,SAAU,SACVC,WAAY,SACZC,aAAc,UACtB,YACKnC,EAAaoC,YAElB,GAAA/F,EAAAC,GAAA,EAACwD,EAAAA,EAAGA,CAACuC,GAAG,gBACJ,GAAAhG,EAAAC,GAAA,EAACgG,EAAAA,EAAUA,CAACC,QAAS,IAAM9F,EAAOT,KAAK,CAAEwG,SAAUC,EAAAA,EAAOC,SAAWxD,MAAO,CAAEL,KAAM8D,KAAKC,UAAU5C,EAAc,CAAC,EAAGyC,EAAAA,EAAOC,mBACxH,GAAArG,EAAAC,GAAA,EAACJ,EAAIA,CAAC2G,MAAM,kBAvC4B7C,EAAapB,KA8CpE,EAACxB,GAAkBA,IAAAA,EAAeO,MAAW,GAC1C,GAAAtB,EAAAC,GAAA,EAACwD,EAAAA,EAAGA,CAACG,GAAI,EAAGC,QAAQ,OAAOC,WAAW,SAAS2C,eAAe,kBAC1D,GAAAzG,EAAAC,GAAA,EAACwF,EAAAA,EAAUA,UAAC,iDAOpC,uHC1IO,IAAMrE,EAAiB,MAAOC,IACnC,IAAMuB,EAAIC,CAAAA,EAAAA,EAAAA,EAAAA,EAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAWC,EAAAA,GAHb,WAGkCC,CAAAA,EAAAA,EAAAA,EAAAA,EAAM,QAAS,iBAAkB3B,IAC3EqF,EAAU,CAAC,MAAMxD,CAAAA,EAAAA,EAAAA,EAAAA,EAAQN,EAAAA,EAAIR,KAAKC,IAAI,IAC1C,IAAMsE,EAAYrE,EAAIE,OACtB,MAAO,CACL,GAAGmE,CAAS,CACZpE,GAAID,EAAIC,EACV,CACF,UAEA,EAAajB,OAINoF,EAHE,EAAE,EAMAE,EAAU,GAAa7D,EAAAA,GAAUD,WAAW,WAAWR,IAAIuE,GAASC","sources":["webpack://_N_E/?6cda","webpack://_N_E/./node_modules/@mui/icons-material/esm/Chat.js","webpack://_N_E/./pages/my-messages.js","webpack://_N_E/./src/services/match.js","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/my-messages\",\n      function () {\n        return require(\"private-next-pages/my-messages.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/my-messages\"])\n      });\n    }\n  ","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 9h12v2H6V9zm8 5H6v-2h8v2zm4-6H6V6h12v2z\"\n}), 'Chat');","\nimport { useEffect, useState } from 'react';\nimport { Box, Typography, IconButton, Container } from \"@mui/material\";\nimport { useAuth } from '../src/contexts/AuthProvider';\nimport { getUserMatches } from '../src/services/match';\nimport { getUsersByEmail } from '../src/services/user';\nimport { firestore } from \"../src/configs/firebase\";\nimport { where, getDocs, query, collection, updateDoc } from 'firebase/firestore';\nimport PageSpinner from \"../src/components/PageSpinner\";\nimport { Chat } from '@mui/icons-material';\nimport { routes } from \"../src/routes\";\nimport { useRouter } from \"next/router\";\nimport { COLORS } from \"../src/theme\";\n\nconst MyMessages = () => {\n    const router = useRouter();\n    const { user } = useAuth();\n    const [users, setUsers] = useState([]);\n    const [matches, setMatches] = useState([]);\n    const [syncing, setSyncing] = useState(false);\n    const [connectedUsers, setConnectedUsers] = useState([]);\n\n    useEffect(() => {\n        const loadMatches = async () => {\n            const currMatches = await getUserMatches(user.email)\n            setSyncing(false);\n            if (!currMatches.length) return\n            setMatches(currMatches)\n        }\n        \n        if (user) {\n            setSyncing(true)\n            loadMatches()\n        }\n    }, [user, user.email])\n\n    useEffect(() => {\n        if (matches.length > 0) {\n            let matchedUsers = [];\n            for (const match of matches) {\n                const otherUser = match.users.filter(matchUser => matchUser !== user.email)\n                matchedUsers = matchedUsers.concat(otherUser);\n            }\n            const uniqueMatchedUsers = matchedUsers.filter((matchedUser, index, self) => self.indexOf(matchedUser) === index)\n            if (uniqueMatchedUsers.length > 0) {\n                getUsersByEmail(uniqueMatchedUsers).then((docs) => {\n                    setUsers(docs.map(doc => {\n                        return {\n                            id: doc.id,\n                            ...doc.data()\n                        }\n                    }))\n                })\n            }\n        }\n    }, [matches, user.email])\n\n    useEffect(() => {\n        async function getMessagedUsers () {\n            const customUsers = [];\n            for (const customUser of users) {\n                const q = query(collection(firestore, \"messages\"), where(\"room\", \"in\", [`${customUser.email}+${user.email}`, `${user.email}+${customUser.email}`]));\n                const querySnapshot = await getDocs(q);\n                console.log(customUser.email);\n                if (querySnapshot.empty === false) {\n                    customUsers.push(customUser);\n                }\n            }\n            setConnectedUsers(customUsers);\n            setSyncing(false)\n        }\n\n        if (users.length > 0) {\n            setSyncing(true);\n            getMessagedUsers()\n        }\n    }, [users, user.email])\n\n    if (syncing) {\n        return <PageSpinner />\n    }\n\n    console.log(connectedUsers);\n\n    return (\n        <Container>\n            <Box mt={8}>\n            {\n                connectedUsers && connectedUsers.length > 0 && connectedUsers.map(messagedUser => (\n                    <Box mb={5} display=\"flex\" alignItems=\"center\" key={messagedUser.id} sx={(theme) => ({\n                        backgroundColor: COLORS.lightGrey,\n                        border: `1px solid ${theme.palette.divider}`,\n                        borderRadius: theme.shape.borderRadius,\n                        marginBottom: theme.spacing(2),\n                        padding: theme.spacing(2),\n                    })}>\n                        <Box\n                        sx={(theme) => ({\n                            minWidth: 80,\n                            width: 80,\n                            height: 80,\n                            borderRadius: 50,\n                            boxShadow: theme.shadows[2],\n                            marginRight: theme.spacing(2),\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                            backgroundRepeat: 'no-repeat',\n                        })}\n                        style={{\n                            backgroundImage: `url(${\n                            messagedUser.photoURL ||\n                            (messagedUser.gender === 'M'\n                                ? 'https://media.istockphoto.com/vectors/default-placeholder-man-vector-id844000458?'\n                                : 'https://st3.depositphotos.com/9998432/13335/v/600/depositphotos_133351974-stock-illustration-default-placeholder-woman.jpg')\n                            })`,\n                        }}\n                        />\n                        <Typography variant='h6' sx={(theme) => ({\n                                width: '100%',\n                                maxWidth: 200,\n                                overflow: 'hidden',\n                                whiteSpace: 'nowrap',\n                                textOverflow: 'ellipsis',\n                        })}>\n                            {messagedUser.firstName}\n                        </Typography>\n                        <Box ml=\"auto\">\n                            <IconButton onClick={() => router.push({ pathname: routes.messages,  query: { data: JSON.stringify(messagedUser) }}, routes.messages)}>\n                                <Chat color=\"primary\" />\n                            </IconButton>\n                        </Box>\n                    </Box>\n                ))\n            }\n            {\n                (!connectedUsers || connectedUsers.length === 0) && (\n                    <Box mb={5} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                        <Typography>You currently have no message history</Typography>\n                    </Box>\n                )\n            }\n            </Box>\n        </Container>\n    )\n}\n\nexport default MyMessages;","import { firestore } from '../configs/firebase';\n\nimport { where, getDocs, query, collection } from 'firebase/firestore';\n\nconst MATCHES = 'matches';\n\nexport const getUserMatches = async (email) => {\n  const q = query(collection(firestore, MATCHES), where('users', 'array-contains', email))\n  const allDocs = (await getDocs(q)).docs.map((doc) => {\n    const matchData = doc.data();\n    return {\n      ...matchData,\n      id: doc.id,\n    };\n  });\n\n  if (!allDocs.length) {\n    return [];\n  }\n\n  return allDocs\n};\n\nexport const unmatch = (matchId) => firestore.collection('matches').doc(matchId).delete();\n"],"names":["window","__NEXT_P","push","__webpack_require__","Chat","createSvgIcon","Z","jsx_runtime","jsx","d","my_messages","router","useRouter","user","useAuth","users","setUsers","useState","matches","setMatches","syncing","setSyncing","connectedUsers","setConnectedUsers","useEffect","loadMatches","currMatches","getUserMatches","email","length","matchedUsers","match","otherUser","filter","matchUser","concat","uniqueMatchedUsers","matchedUser","index","self","indexOf","getUsersByEmail","then","docs","map","doc","id","data","getMessagedUsers","customUsers","customUser","q","query","collection","firestore","where","querySnapshot","getDocs","console","log","empty","PageSpinner","Container","jsxs","Box","mt","messagedUser","mb","display","alignItems","sx","backgroundColor","COLORS","lightGrey","border","theme","palette","divider","borderRadius","shape","marginBottom","spacing","padding","minWidth","width","height","boxShadow","shadows","marginRight","backgroundSize","backgroundPosition","backgroundRepeat","style","backgroundImage","photoURL","gender","Typography","variant","maxWidth","overflow","whiteSpace","textOverflow","firstName","ml","IconButton","onClick","pathname","routes","messages","JSON","stringify","color","justifyContent","allDocs","matchData","unmatch","matchId","delete"],"sourceRoot":""}