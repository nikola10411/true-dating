{"version":3,"file":"static/chunks/pages/messages-95eb708fc7513c3b.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/Send.js","webpack://_N_E/?67df","webpack://_N_E/./src/services/message.js","webpack://_N_E/./pages/messages.js","webpack://_N_E/<anon>"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/messages\",\n      function () {\n        return require(\"private-next-pages/messages.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/messages\"])\n      });\n    }\n  ","import { firestore } from '../configs/firebase';\n\nimport { updateDoc, doc } from 'firebase/firestore';\n\nconst MESSAGES = 'messages';\n\nexport const updateMessage = ({ id, ...messageDetails }) => {\n  const docRef = doc(firestore, MESSAGES, id);\n  updateDoc(docRef, messageDetails)\n}\n\nexport const readMessages = (messages, user) => {\n  if (!messages) return;\n  if (!user) return;\n\n  messages.forEach((message) => {\n    if (message.read) return;\n    if (message.to !== user.email) return;\n    message.read = true;\n    updateMessage({ id: message.id, ...message })\n  });\n};","import { Box, Button, Container, TextField, Typography, CircularProgress } from \"@mui/material\";\nimport { green } from '@mui/material/colors';\nimport { firestore } from \"../src/configs/firebase\";\nimport { useAuth } from '../src/contexts/AuthProvider';\nimport { where, orderBy, limitToLast, query, collection, getDocs } from 'firebase/firestore';\nimport firebase from '../src/configs/firebase';\nimport { useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport { routes } from \"../src/routes\";\nimport { useRouter } from \"next/router\";\n\nimport { Send } from '@mui/icons-material';\nimport { readMessages } from '../src/services/message';\n\nexport default function Messages(props) {\n    const { user } = useAuth();\n    const router = useRouter();\n    const messageContainerRef = useRef(null);\n\n\n    const [currentMessagingUser, setCurrentMessagingUser] = useState(null)\n    useEffect(() => {\n        const getUser = async () => {\n            console.log(router.query);\n            const messagingUser = JSON.parse(router.query.data);\n            console.log(messagingUser);\n            setCurrentMessagingUser(messagingUser);\n\n            const messagesRef = collection(firestore, \"messages\");\n            const firebaseQuery = query(messagesRef, where(\"room\", \"in\", [`${messagingUser.email}+${user.email}`, `${user.email}+${messagingUser.email}`]), orderBy(\"createdAt\"), limitToLast(100));\n            setLoading(true);\n            const querySnapshot = await getDocs(firebaseQuery);\n            const messages = [];\n            querySnapshot.forEach((doc) => {\n                messages.push(doc.data())\n            });\n            setMessages(messages)\n            setLoading(false);\n        }\n        getUser()\n    }, [router.query]);\n\n\n\n    const [messages, setMessages] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        console.log(currentMessagingUser);\n        if (currentMessagingUser && !currentMessagingUser.email) {\n            //return history.push(routes.home);\n        }\n    }, [currentMessagingUser]);\n\n    useEffect(() => {\n        const messageContainerElement = messageContainerRef.current;\n\n        if (!loading && messages.length && messageContainerElement?.scrollTop === 0) {\n            messageContainerElement?.scrollTo({\n                top: messageContainerElement?.scrollHeight,\n                behavior: 'smooth',\n            });\n            readMessages(messages, user);\n        }\n    }, [loading, messages.length]);\n\n    const handleMessageSubmit = async (e) => {\n        e.preventDefault();\n\n        const messageInput = e.target.messageInput;\n        const { email, photoURL, firstName, lastName } = user;\n        const createdAt = firebase.firestore.FieldValue.serverTimestamp();\n\n        const newMessage = {\n            user: { firstName, lastName, email, photoURL },\n            createdAt,\n            text: messageInput.value,\n            room: messages[0]?.room || `${user.email}+${state.email}`,\n            from: user.email,\n            to: state.email,\n            toName: state.firstName,\n            read: false,\n            members: [user.email, state.email]\n        };\n\n        messageInput.value = '';\n        await messagesRef.add(newMessage);\n        messageContainerRef.current?.scrollTo({\n            top: messageContainerRef.current?.scrollHeight,\n            behavior: 'smooth',\n        });\n    };\n\n    if (!currentMessagingUser) {\n        return (\n            <Box />\n        );\n    }\n\n    return (\n        <Box py={6}>\n            <Container>\n                <Box sx={(theme) => ({\n                    borderRadius: theme.shape.borderRadius,\n                    width: '100%',\n                })}  >\n                    <Box display='flex' alignItems='center' sx={(theme) => ({\n                        paddingBottom: theme.spacing(1),\n                        borderBottom: `1px solid ${theme.palette.divider}`,\n                    })} >\n                        <Box\n                            style={{\n                                backgroundImage: `url(${currentMessagingUser.photoURL ||\n                                    (currentMessagingUser.gender === 'M'\n                                        ? 'https://media.istockphoto.com/vectors/default-placeholder-man-vector-id844000458?'\n                                        : 'https://st3.depositphotos.com/9998432/13335/v/600/depositphotos_133351974-stock-illustration-default-placeholder-woman.jpg')\n                                    })`,\n                            }}\n                            sx={(theme) => ({\n                                width: theme.spacing(6),\n                                height: theme.spacing(6),\n                                borderRadius: theme.spacing(3),\n                                backgroundSize: 'cover',\n                                backgroundPosition: 'center',\n                                backgroundRepeat: 'no-repeat',\n                                marginRight: theme.spacing(2),\n                            })}\n                        />\n                        <Box>{currentMessagingUser.firstName}</Box>\n                    </Box>\n                    <Box sx={(theme) => ({\n                        overflowY: 'auto',\n                        maxHeight: '60vh',\n                        minHeight: '40vh',\n                    })} pt={1} ref={messageContainerRef}>\n                        {loading ? (\n                            <Box display='flex' justifyContent='center' alignItems='center' minHeight='inherit'>\n                                <CircularProgress color='primary' />\n                            </Box>\n                        ) : (\n                            messages.map((m) => (\n                                <Box\n                                    key={m.id}\n                                    sx={(theme) => ({\n                                        width: 'fit-content',\n                                        maxWidth: '70%',\n                                        padding: theme.spacing(1),\n                                        borderRadius: theme.shape.borderRadius,\n                                        marginTop: theme.spacing(0.2),\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        backgroundColor: m.user.email === user.email ? ({ matchType }) => (matchType === 1 ? theme.palette.primary.main : green[500]) : theme.palette.grey[700],\n                                        color: m.user.email === user.email ? theme.palette.primary.contrastText : theme.palette.secondary.contrastText,\n                                        marginLeft: m.user.email === user.email ? 'auto' : 'unset',\n                                    })}\n                                >\n                                    <Box sx={(theme) => ({\n                                        overflowWrap: 'break-word',\n                                    })} >{m.text}</Box>\n                                </Box>\n                            ))\n                        )}\n\n                        {!loading && messages.length === 0 && (\n                            <Box\n                                textAlign='center'\n                                display='flex'\n                                minHeight='inherit'\n                                justifyContent='center'\n                                alignItems='center'\n                            >\n                                <Typography variant='body1'>\n                                    This is your first conversation with <br /> <strong>{currentMessagingUser.firstName}</strong>\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                    <Box mt={2}>\n                        <form onSubmit={handleMessageSubmit}>\n                            <TextField\n                                name='messageInput'\n                                variant='outlined'\n                                fullWidth\n                                placeholder='Enter message'\n                                sx={(theme) => ({\n                                    '& .MuiOutlinedInput-root:focus .MuiOutlinedInput-notchedOutline': {\n                                        borderColor: ({ matchType }) => (matchType === 1 ? theme.palette.primary.main : green[500]),\n                                    },\n                                })}\n                                required\n                            />\n                            <Box py={1} />\n                            <Button\n                                type='submit'\n                                fullWidth\n                                color='primary'\n                                variant='contained'\n                                endIcon={<Send />}\n                            >\n                                Send\n                            </Button>\n                        </form>\n                    </Box>\n                </Box>\n            </Container>\n        </Box>\n    );\n}"],"names":["__webpack_exports__","Z","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","d","window","__NEXT_P","push","__webpack_require__","updateMessage","id","messageDetails","param","docRef","doc","firestore","updateDoc","readMessages","messages","user","forEach","message","read","to","email","Messages","props","useAuth","router","useRouter","messageContainerRef","useRef","currentMessagingUser","setCurrentMessagingUser","useState","useEffect","getUser","console","log","query","messagingUser","JSON","parse","data","messagesRef","collection","firebaseQuery","where","concat","orderBy","limitToLast","setLoading","querySnapshot","getDocs","setMessages","loading","messageContainerElement","current","length","scrollTop","scrollTo","top","scrollHeight","behavior","handleMessageSubmit","e","preventDefault","messageInput","target","photoURL","firstName","lastName","createdAt","firebase","FieldValue","serverTimestamp","newMessage","text","value","room","state","from","toName","members","add","jsx_runtime","Box","py","Container","jsxs","sx","borderRadius","theme","shape","width","display","alignItems","paddingBottom","spacing","borderBottom","palette","divider","style","backgroundImage","gender","height","backgroundSize","backgroundPosition","backgroundRepeat","marginRight","overflowY","maxHeight","minHeight","pt","ref","justifyContent","CircularProgress","color","map","maxWidth","padding","marginTop","flexDirection","backgroundColor","m","matchType","primary","main","green","grey","contrastText","secondary","marginLeft","overflowWrap","textAlign","Typography","variant","br","strong","mt","form","onSubmit","TextField","name","fullWidth","placeholder","borderColor","required","Button","type","endIcon","Send"],"sourceRoot":""}