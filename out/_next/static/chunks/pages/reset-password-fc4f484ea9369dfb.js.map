{"version":3,"file":"static/chunks/pages/reset-password-fc4f484ea9369dfb.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/material/Alert/alertClasses.js","webpack://_N_E/./node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","webpack://_N_E/./node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","webpack://_N_E/./node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","webpack://_N_E/./node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","webpack://_N_E/./node_modules/@mui/material/Alert/Alert.js","webpack://_N_E/./node_modules/@mui/material/internal/svg-icons/Close.js","webpack://_N_E/?1ff0","webpack://_N_E/./pages/reset-password.js","webpack://_N_E/./src/utils/email.js","webpack://_N_E/<anon>"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"components\", \"componentsProps\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"slotProps\", \"slots\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'filled' && _extends({\n    fontWeight: theme.typography.fontWeightMedium\n  }, theme.vars ? {\n    color: theme.vars.palette.Alert[`${color}FilledColor`],\n    backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n  } : {\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n    color: theme.palette.getContrastText(theme.palette[color].main)\n  }));\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  var _ref, _slots$closeButton, _ref2, _slots$closeIcon, _slotProps$closeButto, _slotProps$closeIcon;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n      action,\n      children,\n      className,\n      closeText = 'Close',\n      color,\n      components = {},\n      componentsProps = {},\n      icon,\n      iconMapping = defaultIconMapping,\n      onClose,\n      role = 'alert',\n      severity = 'success',\n      slotProps = {},\n      slots = {},\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const AlertCloseButton = (_ref = (_slots$closeButton = slots.closeButton) != null ? _slots$closeButton : components.CloseButton) != null ? _ref : IconButton;\n  const AlertCloseIcon = (_ref2 = (_slots$closeIcon = slots.closeIcon) != null ? _slots$closeIcon : components.CloseIcon) != null ? _ref2 : CloseIcon;\n  const closeButtonProps = (_slotProps$closeButto = slotProps.closeButton) != null ? _slotProps$closeButto : componentsProps.closeButton;\n  const closeIconProps = (_slotProps$closeIcon = slotProps.closeIcon) != null ? _slotProps$closeIcon : componentsProps.closeIcon;\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(AlertCloseButton, _extends({\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose\n      }, closeButtonProps, {\n        children: /*#__PURE__*/_jsx(AlertCloseIcon, _extends({\n          fontSize: \"small\"\n        }, closeIconProps))\n      }))\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/reset-password\",\n      function () {\n        return require(\"private-next-pages/reset-password.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/reset-password\"])\n      });\n    }\n  ","import { useState } from \"react\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { auth } from \"../src/configs/firebase\";\nimport { validateEmail } from \"../src/utils/email\";\nimport { Alert, Box, Button, CircularProgress, Grid, TextField } from \"@mui/material\";\nimport Logo from \"../src/components/Logo\";\n\nexport default function ResetPassword() {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(null);\n  const [emailSent, setEmailSent] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [serverError, setServerError] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (serverError) {\n      setServerError(null);\n    }\n\n    if (error) {\n      setError(null);\n    }\n\n    const valid = validateEmail(email);\n    if (!valid) {\n      return setError(INVALID_EMAIL);\n    }\n\n    setLoading(true);\n    try {\n      await sendPasswordResetEmail(auth, email, { url: `${window.location.origin}/login` });\n      setEmailSent(true);\n    } catch (error) {\n      if (error.code === USER_NOT_FOUND) {\n        setServerError('This email is not registered!');\n      } else {\n        setServerError(error.message);\n      }\n    }\n    setLoading(false);\n  };\n\n  const handleInputChange = ({ target: { value } }) => {\n    setEmail(value);\n  };\n\n  return (\n    <Grid container component={'main'} sx={(theme) => ({\n      minHeight: '100vh',\n      backgroundColor: theme.palette.grey[100]\n    })}>\n      <Grid item xs={false} sm={4} md={7} sx={{\n        backgroundImage: 'url(https://source.unsplash.com/1600x900/?dating)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n      }} />\n      <Grid item container xs={12} sm={8} md={5} sx={(theme) => ({ padding: theme.spacing(4) })}>\n        <Grid container alignItems='center' direction='column' justifyContent='center'>\n          <Box sx={(theme) => ({\n            maxWidth: 400,\n            marginBottom: theme.spacing(4),\n          })}>\n            <Logo />\n          </Box>\n          <Box maxWidth={500} width={'100%'}>\n            <Box width='100%'>\n              <Box pb={2}>\n                <Alert severity={emailSent ? 'success' : 'info'}>\n                  {emailSent ? (\n                    <span>\n                      Follow the instructions sent to <strong>{email}</strong> to recover your password\n                    </span>\n                  ) : (\n                    'Get instructions sent to this email that explain how to reset your password'\n                  )}\n                </Alert>\n              </Box>\n\n              {serverError && (\n                <Box pb={2}>\n                  <Alert severity='error'>{serverError}</Alert>\n                </Box>\n              )}\n\n              <form\n                onChange={handleInputChange}\n                onSubmit={\n                  emailSent\n                    ? (e) => {\n                      e.preventDefault();\n                      return history.push(routes.login);\n                    }\n                    : handleSubmit\n                }\n              >\n                <Grid container spacing={2}>\n                  {!emailSent && (\n                    <Grid item xs={12}>\n                      <TextField\n                        variant='outlined'\n                        required\n                        fullWidth\n                        id='email'\n                        label='Email'\n                        name='email'\n                        autoComplete='email'\n                        autoFocus\n                        error={!!error}\n                        helperText={error || ''}\n                      />\n                    </Grid>\n                  )}\n                  <Grid item xs={12}>\n                    <Button\n                      type='submit'\n                      fullWidth\n                      variant='contained'\n                      color='primary'\n                      disabled={loading}\n                      endIcon={loading ? <CircularProgress size={16} /> : undefined}\n                    >\n                      {emailSent ? 'Done' : 'Send'}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}","export const validateEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n"],"names":["getAlertUtilityClass","slot","generateUtilityClass","Z","alertClasses","generateUtilityClasses","SuccessOutlined","createSvgIcon","jsx_runtime","jsx","d","ReportProblemOutlined","ErrorOutline","InfoOutlined","_excluded","useUtilityClasses","ownerState","variant","color","severity","classes","slots","root","capitalize","icon","message","action","composeClasses","AlertRoot","styled","ZP","Paper","name","overridesResolver","props","styles","theme","getColor","palette","mode","colorManipulator","_j","$n","getBackgroundColor","esm_extends","typography","body2","backgroundColor","display","padding","vars","Alert","light","Alert_alertClasses","main","border","fontWeight","fontWeightMedium","dark","getContrastText","AlertIcon","marginRight","fontSize","opacity","AlertMessage","minWidth","overflow","AlertAction","alignItems","marginLeft","defaultIconMapping","success","warning","error","info","react","forwardRef","inProps","ref","_ref","_slots$closeButton","_ref2","_slots$closeIcon","_slotProps$closeButto","_slotProps$closeIcon","useThemeProps","children","className","closeText","components","componentsProps","iconMapping","onClose","role","slotProps","other","objectWithoutPropertiesLoose","AlertCloseButton","closeButton","CloseButton","IconButton","AlertCloseIcon","closeIcon","CloseIcon","Close","closeButtonProps","closeIconProps","jsxs","elevation","clsx_m","size","title","onClick","Alert_Alert","__webpack_exports__","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_2__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","window","__NEXT_P","push","__webpack_require__","ResetPassword","email","setEmail","useState","setError","emailSent","setEmailSent","loading","setLoading","serverError","setServerError","handleSubmit","event","preventDefault","valid","validateEmail","INVALID_EMAIL","sendPasswordResetEmail","auth","url","concat","location","origin","code","USER_NOT_FOUND","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Grid","container","component","sx","minHeight","grey","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","spacing","direction","justifyContent","Box","maxWidth","marginBottom","Logo","width","pb","span","strong","form","onChange","target","value","param","onSubmit","e","history","routes","login","TextField","required","fullWidth","id","label","autoComplete","autoFocus","helperText","Button","type","disabled","endIcon","CircularProgress","undefined","test"],"sourceRoot":""}